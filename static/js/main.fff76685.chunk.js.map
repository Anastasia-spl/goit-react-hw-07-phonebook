{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","components/Loader/Loader.jsx","redux/store.js","App.js","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","getLoader","loading","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","contactsActions","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","contact","post","deleteContact","contactId","delete","createReducer","_","payload","id","error","contactsReducer","combineReducers","Loader","middleWare","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ContactsPage","lazy","Page404","App","className","fallback","type","color","height","width","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fff76685.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getLoader = state => state.contacts.loading;\n\nconst getFilteredContacts = createSelector([getFilter, getContacts],\n  (filter, contacts) =>\n    filter !== ''\n      ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase()),\n      )\n      : contacts);\n\n\n//eslint-disable-next-line \nexport default { getContacts, getFilter, getFilteredContacts, getLoader }","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\n const addContactRequest = createAction('contacts/addContactRequest');\n const addContactSuccess = createAction('contacts/addContactSuccess');\n const addContactError = createAction('contacts/addContactError');\n\n const deleteContactRequest = createAction('contacts/deleteContactRequest');\n const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n const deleteContactError = createAction('contacts/deleteContactError');\n\n const filterContact = createAction('contacts/filterContact');\n // eslint-disable-next-line\nexport default { fetchContactsRequest, fetchContactsSuccess, fetchContactsError,addContactRequest, addContactSuccess, addContactError,deleteContactRequest, deleteContactSuccess, deleteContactError, filterContact } \n","import axios from 'axios';\nimport  contactsActions  from './contacts-actions'; \nconst { fetchContactsRequest,\n  fetchContactsSuccess,\n   fetchContactsError,\n   addContactRequest,\n   addContactSuccess,\n   addContactError,\n   deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError } = contactsActions;\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n}\n\nconst addContact = (contact) => async dispatch => {\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n}\n\nconst deleteContact = (contactId) => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error))\n  }\n}\n\n//eslint-disable-next-line \nexport default { fetchContacts, addContact, deleteContact }","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsActions from './contacts-actions';\n\nconst { fetchContactsSuccess,\n   addContactSuccess,\n   deleteContactSuccess ,\n   filterContact,\n   fetchContactsRequest,\n    addContactRequest,\n    deleteContactRequest,\n    fetchContactsError,\n  addContactError,\n  deleteContactError } = contactsActions;\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess] : (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [addContactRequest]: () => true,\n  [deleteContactRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [addContactSuccess]: () => false,\n  [deleteContactSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactError]: () => false,\n  [deleteContactError]: () => false, \n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n    items,\n  filter,\n  loading,\n    error\n})\nexport default contactsReducer;\n  \n\n// const itemsInitialState = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// ];\n\n\n// {\n//     \"id\": \"id-1\",\n//     \"name\": \"Rosie Simpson\",\n//     \"number\": \"459-12-56\"\n//   },\n//   {\n//     \"id\": \"id-2\",\n//     \"name\": \"Hermione Kline\",\n//     \"number\": \"443-89-12\"\n//   },\n//   {\n//     \"id\": \"id-3\",\n//     \"name\": \"Eden Clements\",\n//     \"number\": \"645-17-79\"\n//   }","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport default Loader;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts';\n\nconst middleWare = [\n  ...getDefaultMiddleware(), logger]\n\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleWare,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n\nexport default store ;\n","import { Switch, Route } from 'react-router-dom';\nimport { lazy } from 'react';\nimport { Suspense } from 'react';\nimport Loader from './components/Loader';\n\nconst ContactsPage = lazy(() => import('./pages/Contacts' /* webpackChunkName: \"contacts-page\" */));\nconst Page404 = lazy(() => import('./pages/Page404' /* webpackChunkName: \"404-page\" */))\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80}/>}>\n        <Switch>\n          <Route path={'/goit-react-hw-07-phonebook/contacts'} component={ContactsPage} />\n          <Route component={Page404} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}